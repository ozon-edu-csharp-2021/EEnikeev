version: '3.8'

services:
  
# MERCH SERVICE ---------------------------------------------------------------
  merchandise-service:
    build: 
      context: .
      dockerfile: ./Dockerfile
    hostname: merchandise-service
    ports:
      - "5070:5000"
      - "5071:5001"
    environment:
      DatabaseConnectionOptions__ConnectionString: "Host=host.docker.internal;Port=5420;Database=merchandise-service;Username=postgres;Password=merchPassword"
    depends_on:
      - merchandise-service-db

  merchandise-service-db:
    image: postgres:latest
    ports:
      - "5420:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: merchPassword
      POSTGRES_DB: merchandise-service
    command: "-c log_statement=all"

# STOCK-API ---------------------------------------------------------------  
#  stock-api:
#    image: ghcr.io/ozon-edu-csharp-2021/stock-api:main
#    hostname: stock-api
#    environment:
#      DatabaseConnectionOptions__ConnectionString: "Host=host.docker.internal;Port=5427;Database=stock-api;Username=postgres;Password=stockApiPassword"
#    depends_on:
#      - stock-api-db
#        
#  stock-api-db:
#    image: postgres:latest
#    ports:
#      - "5427:5432"
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: stockApiPassword
#      POSTGRES_DB: stock-api
      
# SUPPLY SERVICE ---------------------------------------------------------------  
#  supply-service:
#    image: ghcr.io/ozon-edu-csharp-2021/supply-service:main
#    environment:
#      DbConfiguration__ConnectionString: "Host=host.docker.internal;Port=5426;Database=supply-service;Username=postgres;Password=supplyServicePassword"
#    hostname: supply-service
#    depends_on:
#      - supply-service-db
#
#  supply-service-db:
#    image: postgres:latest
#    ports:
#      - "5426:5432"
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: supplyServicePassword
#      POSTGRES_DB: supply-service

# EMAIL SERVICE ---------------------------------------------------------------  
#  emailing-service:
#    image: ghcr.io/ozon-edu-csharp-2021/emailing-service:main
#    hostname: emailing-service

# EMPLOYEES SERVICE -----------------------------------------------------------  
#  employees-service:
#    image: ghcr.io/ozon-edu-csharp-2021/employees-service:main
#    hostname: employees-service
#    depends_on:
#      - employees-service-postgres-db
#    volumes:
#      - ./src:/src
#        
#  employees-service-db:
#    image: postgres:latest
#    ports:
#      - "5425:5432"
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: employees-service
#    volumes:
#      - ./db/employees-service-postgres-db/dbdata:/var/lib/postgresql/data"

# ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ozon-network

# KAFKA
  broker:
    image: confluentinc/cp-kafka:6.2.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - ozon-network

# REDIS
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - ozon-network
    hostname: redis
    
# JAEGER
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - ozon-network

# NETWORKS
networks:
  ozon-network:
    driver: bridge